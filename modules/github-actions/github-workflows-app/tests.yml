# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI tests

on:
  push:
    branches:
      - '*' 
      - '!workflow-creation' 
  pull_request:
    branches:
      - '*' 
      - '!workflow-creation'  

env:
  REDIS_URL: ""
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
  SECRET_KEY_BASE: "xx"

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        node-version: [20.x]
        ruby-version: ['3.3.1']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - uses: ruby/setup-ruby@v1
    - run: cd apps/rails && bundle && cd ../../
    - run: cd apps/rails && rails db:schema:load db:seed && cd ../
    - run: yarn install
    - run: yarn lint
    - run: yarn test